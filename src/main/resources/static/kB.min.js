class APIs{static ping(url,successCb,errorCb,timeout){let headers={"Content-Type":"application/json",Accept:"application/json"};fetch(url,{mode:"no-cors",credentials:"include",method:"HEAD",headers:{},timeout:timeout}).then(resp=>{if(successCb!=null)successCb(resp)}).catch(error=>{if(errorCb!=null)errorCb(error)})}}class Events{static elMousePosEvent(event){return elMousePos(event.target)}static elMousePos(el){const rect=el.getBoundingClientRect();const x=event.clientX-rect.left;const y=event.clientY-rect.top;return{x:x,y:y}}}class Storage{static get(key){return localStorage.getItem(key)}static getOrI(key,i){const local=Storage.get(key);return local!=null?local:i}static getParse(key){return JSON.parse(Storage.get(key))}static getParseOrI(key,i){const local=Storage.getParse(key);return local!=null?local:i}static set(key,value){localStorage.setItem(key,value)}static setParse(key,value){Storage.set(key,JSON.stringify(value))}}function childrenInnerText(el){const ret=[];const children=el.childNodes;let index=0;children.forEach(item=>{ret[index++]=item.firstChild.innerText});return ret}function cloneButtonEl(el){const recentCommandsPar=document.getElementById("recentCommands");const btn=cloneButton(el.innerText);recentCommandsPar.prepend(btn);if(recentCommandsPar.childElementCount>=13){recentCommandsPar.removeChild(recentCommandsPar.lastChild)}const recentCommands=childrenInnerText(recentCommandsPar);Storage.setParse(PREFIX+"recent-commands",recentCommands)}function cloneButton(text){const btn=document.createElement("button");btn.innerText=text;btn.onclick=function(){setInp(btn.innerText);kBUtils.send(btn.innerText,fillDisplay)};btn.classList.add("btn","btn-primary","w-100","h-100");const btnWrapper=document.createElement("div");btnWrapper.classList.add("col-md-2","col-6","p-1");btnWrapper.appendChild(btn);return btnWrapper}function guiInit(){const arr=Storage.getParse(PREFIX+"recent-commands");const recentCommandsPar=document.getElementById("recentCommands");if(arr!=null){arr.forEach(str=>{const btn=cloneButton(str);recentCommandsPar.append(btn)})}}const PREFIX="kbcookie__";function init(){pingLinks()}function pingLinks(){const kbLinks=document.getElementsByClassName("kb-links");for(var i=0;i<kbLinks.length;i++){const link=kbLinks.item(i);const linkA=link.children[0];const linkHREF=linkA.href;linkA.className="nav-link text-warning";APIs.ping(linkHREF,resp=>{linkA.className="nav-link text-success"},err=>{linkA.className="nav-link text-danger"},1e4)}}function clearHTML(el){el.innerHTML=""}function kbInp(){return document.getElementById("kbInp")}function setInp(str){kbInp().value=str}function clearInp(){kbInp().value=""}function kbDisplay(){return document.getElementById("kbDisplay")}function sendInp(){kBUtils.send(kbInp().value,fillDisplay)}function fillDisplay(json){const display=kbDisplay();clearHTML(display);json.resp.forEach(item=>{const pItem=document.createElement(item?"pre":"br");pItem.innerHTML=item;display.append(pItem)})}class kBUtils{static send(commandString,receiverFunc){fetch("/",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:commandString}).then(resp=>resp.json()).then(json=>{receiverFunc(json)})}}class APIs{static ping(url,successCb,errorCb,timeout){let headers={Accept:"application/json","Content-Type":"application/json"};fetch(url,{mode:"no-cors",credentials:"include",method:"HEAD",headers:headers,timeout:timeout}).then(()=>{if(successCb!=null)successCb()}).catch(()=>{if(errorCb!=null)errorCb()})}}class Events{static elMousePosEvent(event){return elMousePos(event.target)}static elMousePos(el){const rect=el.getBoundingClientRect();const x=event.clientX-rect.left;const y=event.clientY-rect.top;return{x:x,y:y}}}class Storage{static get(key){return localStorage.getItem(key)}static getOrI(key,i){const local=Storage.get(key);return local!=null?local:i}static getParse(key){return JSON.parse(Storage.get(key))}static getParseOrI(key,i){const local=Storage.getParse(key);return local!=null?local:i}static set(key,value){localStorage.setItem(key,value)}static setParse(key,value){Storage.set(key,JSON.stringify(value))}}function childrenInnerText(el){const ret=[];const children=el.childNodes;let index=0;children.forEach(item=>{ret[index++]=item.firstChild.innerText});return ret}function cloneButtonEl(el){const recentCommandsPar=document.getElementById("recentCommands");const btn=cloneButton(el.innerText);recentCommandsPar.prepend(btn);if(recentCommandsPar.childElementCount>=13){recentCommandsPar.removeChild(recentCommandsPar.lastChild)}const recentCommands=childrenInnerText(recentCommandsPar);Storage.setParse(PREFIX+"recent-commands",recentCommands)}function cloneButton(text){const btn=document.createElement("button");btn.innerText=text;btn.onclick=function(){setInp(btn.innerText);kBUtils.send(btn.innerText,fillDisplay)};btn.classList.add("btn","btn-primary","w-100","h-100");const btnWrapper=document.createElement("div");btnWrapper.classList.add("col-md-2","col-6","p-1");btnWrapper.appendChild(btn);return btnWrapper}function guiInit(){const arr=Storage.getParse(PREFIX+"recent-commands");const recentCommandsPar=document.getElementById("recentCommands");if(arr!=null){arr.forEach(str=>{const btn=cloneButton(str);recentCommandsPar.append(btn)})}}const PREFIX="kbcookie__";function init(){pingLinks()}function pingLinks(){const kbLinks=document.getElementsByClassName("kb-links");for(var i=0;i<kbLinks.length;i++){const link=kbLinks.item(i);const linkA=link.children[0];const linkHREF=linkA.href;linkA.className="nav-link text-warning";APIs.ping(linkHREF,resp=>{linkA.className="nav-link text-success"},err=>{linkA.className="nav-link text-danger"},1e4)}}function clearHTML(el){el.innerHTML=""}function kbInp(){return document.getElementById("kbInp")}function setInp(str){kbInp().value=str}function clearInp(){kbInp().value=""}function kbDisplay(){return document.getElementById("kbDisplay")}function sendInp(){kBUtils.send(kbInp().value,fillDisplay)}function fillDisplay(json){const display=kbDisplay();clearHTML(display);json.resp.forEach(item=>{const pItem=document.createElement(item?"pre":"br");pItem.innerHTML=item;display.append(pItem)})}class kBUtils{static send(commandString,receiverFunc){fetch("/",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:commandString}).then(resp=>resp.json()).then(json=>{receiverFunc(json)})}}